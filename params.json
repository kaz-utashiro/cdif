{"name":"Cdif","tagline":"cdif - context diff command","body":"# CDIF\r\n\r\n### is word context visualizer of DIFF output\r\n\r\n### for ANSI color terminal\r\n\r\n[![cdif](http://cdn-ak.f.st-hatena.com/images/fotolife/u/uta46/20140110/20140110150042.gif)](http://cdn-ak.f.st-hatena.com/images/fotolife/u/uta46/20140110/20140110150042.gif)\r\n\r\n# Side-by-side view\r\n\r\n### power by SDIF command\r\n\r\n[![default](http://kaz-utashiro.github.io/sdif/images/screen-shot-default.jpg)](http://kaz-utashiro.github.io/sdif/images/screen-shot-default.jpg)\r\n\r\n\r\n# International\r\n\r\n### Unicode\r\n\r\n### East Asian wide width character\r\n\r\n### Japanese Kanji/Hiragana/Katakana separation\r\n\r\n[![japanese](http://kaz-utashiro.github.io/sdif/images/screen-shot-japanese.jpg)](http://kaz-utashiro.github.io/sdif/images/screen-shot-japanese.jpg)\r\n\r\n\r\n# Japanese syllable tokenizer\r\n\r\n### --mecab morphology\r\n\r\n[![mecab](http://kaz-utashiro.github.io/sdif/images/screen-shot-mecab.jpg)](http://kaz-utashiro.github.io/sdif/images/screen-shot-mecab.jpg)\r\n\r\n[![mecab](http://kaz-utashiro.github.io/sdif/images/screen-shot-mecab-comp.jpg)](http://kaz-utashiro.github.io/sdif/images/screen-shot-mecab-comp.jpg)\r\n\r\n\r\n# Using inside Emacs\r\n\r\n[![emacs](http://cdn-ak.f.st-hatena.com/images/fotolife/u/uta46/20140403/20140403170919.png)](http://cdn-ak.f.st-hatena.com/images/fotolife/u/uta46/20140403/20140403170919.png)\r\n# NAME\r\n\r\ncdif - word context diff\r\n\r\n# SYNOPSIS\r\n\r\ncdif \\[cdif option\\] file1 file2\r\n\r\ncdif \\[rcs options\\] \\[cdif options\\] file\r\n\r\ncdif \\[cdif options\\] \\[diff-data\\]\r\n\r\nOptions:\r\n\r\n        -c, -Cn         context diff\r\n        -u, -Un         unified diff\r\n        -i              ignore case\r\n        -b              ignore trailing blank\r\n        -w              ignore whitespace\r\n        -t              expand tabs\r\n        -T              initial tabs\r\n        --rcs           use rcsdiff\r\n        -r<rev>, -q     rcs options\r\n\r\n        -B                  char-by-char comparison\r\n        -W                  specify terminal width\r\n        --diff=command      specify diff command\r\n        --stat              show statistical information\r\n        --colormap=s        specify color map\r\n        --[no]color         color or not            (default true)\r\n        --[no]256           ANSI 256 color mode     (default true)\r\n        --[no]commandcolor  color for command line  (default true)\r\n        --[no]markcolor     color for diff mark     (default true)\r\n        --[no]textcolor     color for normal text   (default true)\r\n        --[no]old           print old text          (default true)\r\n        --[no]new           print new text          (default true)\r\n        --[no]command       print diff command line (default true)\r\n        --[no]unknown       print unknown line      (default true)\r\n\r\n# DESCRIPTION\r\n\r\n__cdif__ is a post-processor of the Unix diff command.  It highlights\r\ndeleted, changed and added words based on word context.\r\n\r\nYou may want to compare character-by-character rather than\r\nword-by-word.  Option __-B__ option can be used for that purpose.\r\n\r\nIf only one file is specified, cdif reads that file (stdin if no file)\r\nas a output from diff command.\r\n\r\nLines those don't look like diff output are simply ignored and\r\nprinted.\r\n\r\n# OPTIONS\r\n\r\n- __-__\\[__cCuUibwtT__\\]\r\n\r\n    Almost same as __diff__ command.\r\n\r\n- __--rcs__, __-r___rev_, __-q__\r\n\r\n    Use rcsdiff instead of normal diff.  Option __--rcs__ is not required\r\n    when __-r___rev_ is supplied.\r\n\r\n- __-B__, __--char__\r\n\r\n    Compare the data character-by-character context.\r\n\r\n- __-W__ _width_, __--width__=_width_\r\n\r\n    Explicitly specify terminal width.\r\n\r\n- __--diff__=_command_\r\n\r\n    Specify the diff command to use.\r\n\r\n- __--__\\[__no__\\]__color__\r\n\r\n    Use ANSI color escape sequence for output.\r\n\r\n- __--colormap__=_colormap_, __--cm__=_colormap_\r\n\r\n    Basic _colormap_ format is :\r\n\r\n        FIELD=COLOR\r\n\r\n    where the FIELD is one from these :\r\n\r\n        COMMAND  Command line\r\n        OMARK    Old mark\r\n        NMARK    New mark\r\n        OTEXT    Old text\r\n        NTEXT    New text\r\n        OCHANGE  Old change part\r\n        NCHANGE  New change part\r\n        APPEND   Appended part\r\n        DELETE   Deleted part\r\n\r\n    You can make multiple filelds same color joining them by = :\r\n\r\n        FIELD1=FIELD2=...=COLOR\r\n\r\n    Also wildcard can be used for field name :\r\n\r\n        *CHANGE=BDw\r\n\r\n    Multiple fields can be specified by repeating options\r\n\r\n        --cm FILED1=COLOR1 --cm FIELD2=COLOR2 ...\r\n\r\n    or combined with comma (,) :\r\n\r\n        --cm FILED1=COLOR1,FIELD2=COLOR2, ...\r\n\r\n    COLOR is combination of single character representing uppercase\r\n    foreground color :\r\n\r\n        R  Red\r\n        G  Green\r\n        B  Blue\r\n        C  Cyan\r\n        M  Magenta\r\n        Y  Yellow\r\n        K  Black\r\n        W  White\r\n\r\n    and corresponding lowercase background color :\r\n\r\n        r, g, b, c, m, y, k, w\r\n\r\n    or RGB value if using ANSI 256 color terminal :\r\n\r\n        FORMAT:\r\n            foreground[/background]\r\n\r\n        COLOR:\r\n            000 .. 555       : 6 x 6 x 6 216 colors\r\n            000000 .. FFFFFF : 24bit RGB mapped to 216 colors\r\n\r\n        Sample:\r\n            005     0000FF        : blue foreground\r\n               /505       /FF00FF : magenta background\r\n            000/555 000000/FFFFFF : black on white\r\n            500/050 FF0000/00FF00 : red on green\r\n\r\n    and other effects :\r\n\r\n        S  Standout (reverse video)\r\n        U  Underline\r\n        D  Double-struck (boldface)\r\n        F  Flash (blink)\r\n        E  Expand (only for command line)\r\n\r\n    When __E__ is specified for command line, the line is expanded to\r\n    window width filling up by space characters.\r\n\r\n    Defaults are :\r\n\r\n        COMMAND => \"SE\"\r\n        OMARK   => \"CS\"\r\n        NMARK   => \"MS\"\r\n        OTEXT   => \"C\"\r\n        NTEXT   => \"M\"\r\n        OCHANGE => \"BD/445\"\r\n        NCHANGE => \"BD/445\"\r\n        DELETE  => \"RD/544\"\r\n        APPEND  => \"RD/544\"\r\n\r\n    This is equivalent to :\r\n\r\n        cdif --cm 'COMMAND=SE,OMARK=CS,NMARK=MS' \\\r\n             --cm 'OTEXT=C,NTEXT=M,*CHANGE=BD/445,DELETE=APPEND=RD/544'\r\n\r\n- __--__\\[__no__\\]__commandcolor__, __--cc__\r\n- __--__\\[__no__\\]__markcolor__, __--mc__\r\n- __--__\\[__no__\\]__textcolor__, __--tc__\r\n\r\n    Enable/Disable using color for the corresponding field.\r\n\r\n- __--__\\[__no__\\]__old__, __--__\\[__no__\\]__new__\r\n\r\n    Print or not old/new text in diff output.\r\n\r\n- __--__\\[__no__\\]__command__\r\n\r\n    Print or not command lines preceding diff output.\r\n\r\n- __--__\\[__no__\\]__unknown__\r\n\r\n    Print or not lines not look like diff output.\r\n\r\n- __--__\\[__no__\\]__mark__\r\n\r\n    Print or not marks at the top of diff output lines.  At this point,\r\n    this option is effective only for unified diff.\r\n\r\n    Next example produces the output exactly same as _new_ except visual\r\n    effects.\r\n\r\n        cdif -U100 --nomark --noold --nocommand --nounknown old new\r\n\r\n    These options are prepared for watchdiff(1) command.\r\n\r\n- __--stat__\r\n\r\n    Print statistical information at the end of output.  It shows number\r\n    of total appended/deleted/changed words in the context of cdif.  It's\r\n    common to have many insertions and deletions of newlines becuase of\r\n    text filling process.  So normal informaiton is followed by modified\r\n    number which ignores insert/delete newlines.\r\n\r\n- __--mecab__\r\n\r\n    Experimental option for using __mecab__ as a tokenizer.  To use this\r\n    option, external command __mecab__ has to be installed.\r\n\r\n# AUTHOR\r\n\r\nKazumasa Utashiro\r\n\r\nhttps://github.com/kaz-utashiro/cdif\r\n\r\n# SEE ALSO\r\n\r\nperl(1), diff(1), sdif(1), watchdiff(1)\r\n\r\n# BUGS\r\n\r\n__cdif__ is naturally not very fast because it uses normal diff command\r\nas a backend processor to compare words.\r\n\r\n# COPYRIGHT\r\n\r\nUse and redistribution for ANY PURPOSE are granted as long as all\r\ncopyright notices are retained.  Redistribution with modification is\r\nallowed provided that you make your modified version obviously\r\ndistinguishable from the original one.  THIS SOFTWARE IS PROVIDED BY\r\nTHE AUTHOR \\`\\`AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES ARE\r\nDISCLAIMED.\r\n","google":"UA-47549010-1","note":"Don't delete this file! It's used internally to help with page regeneration."}